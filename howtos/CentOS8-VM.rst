Using CentOS8 in VirtualBox
======================================
`VirtualBox <https://www.virtualbox.org/>`_ is a virtualization product to emulate a whole PC. Within this, a operating system like *CentOS-8* can be installed
like on a 'normal' computer. *VirtualBox* is available for Windows-, MacOS- and Linux-based host operating systems.

Installation of Guest Operating System CentOS-8
-----------------------------------------------
CentOS-8 (as well as other operating systems) is installed by 'virtually' inserting the iso-image downloaded as a virtual CD into the virtual drive. This
is done in the *storage* settings of the virtual machine, which has beed created before. Virtual Hard Disk space of about 30GB should be sufficient. Always make
sure to use the current version of *VirtualBox*.

Network Connection
------------------
Unfortunately, right now there doesn't exist a Cisco-VPN solution for CentOS-8 which works with Gemini's. NetworkManager-vpnc is apparently not yet built for
CentOS-8.
To work around this issue in the VM's network settings activate *NAT* and in the *Advanced* section set the adapter type to 
*Paravirtualized Network (virtio-net)*. Then VPN connection to Gemini can be activated on the host system. Reconnect your virtual network and the host system's
VPN connection should be accessible from within the guest system now.

.. _testing RPM repository:

Gemini's RTSWG RPM Repository
-----------------------------
Having activated the VPN connection to or being located within HBF facility, you can ouput a list of the repository by opening its `URL <http://hbfswgrepo-lv1.hi.gemini.edu/repo/gembase/>`_ in a web browser. Copy the URL of the package beginning with :code:`gem-rtsw-repo` (usually somthing like *rightclick -> copy link location*) and install this repo in your virtual machine, e.g.

::

  sudo dnf install -y http://hbfswgrepo-lv1.hi.gemini.edu/repo/gembase/gem-rtsw-repo-3.15.8-0.1.0.20200731.git.0.9602532.el8.x86_64.rpm 
  
Please note that the repository is disabled by default (because it is only reachable within Gemini or being connected by VPN). To do any operations on
this repository, always use the :code:`--enablerepo=gem-rtsw` option. Or enable it permanently with

::

  sudo dnf install dnf-utils -y
  sudo dnf config-manager --enable gem-rtsw
  
Then :code:`gem-rtsw` packages can be installed, for example

::

  sudo dnf install epics-base-devel
  
or, for casrotator development packages

.. _dependencies:

::

  sudo dnf install crcs_mk-devel
  
which should install everything needed for casrotator development including dependecies like tdct, epics-base-devel etc. However, to be able to do development, sources would have to be checked out from Gemini's gitlab repository (see ).
  
To list all packages available in :code:`gem-rtsw` execute

::

  dnf --disablerepo=* --enablerepo=gem-rtsw list available
  
A complete command reference for :code:`dnf` can be found `here <https://dnf.readthedocs.io/en/latest/command_ref.html>`_.

Gemini's gitlab Repository
---------------------------
The group :code:`rtsw` within Gemini's gitlab repository is located at `https://gitlab.gemini.edu/rtsw <https://gitlab.gemini.edu/rtsw>`_. Geminites should be able to login with their LDAP credentials.

The :code:`crcs_mk` ioc module is located in the :code:`ioc` subgroup. All dependencies are locatet in the :code:`support` subgroup.

Clone Project Using SSH Public Key
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
To be able to clone a gitlab project with a SSH key, it first has to be made sure one exists on your local CentOS8 virtual machine. Open a terminal and 

::

  cat ~/.ssh/id_rsa.pub
  
If this produces an error message, a key pair needs to be generated by

::

  ssh-keygen -t rsa

For comfortablity, it is recommended to :code:`enter` through the whole process, no password, just standards. Afterwards, the public key should be :code:`cat` like above.

Then the user needs to logon to gitlab, navigate to *Settings->SSH Keys* and add the key following the given procedure by copy-pasting the key that just was :code:`cat` above. 

It is now possible to do

.. _clone:

::

  git clone git@gitlab.gemini.edu:rtsw/support/<project name>.git
  
or

::

  git clone git@gitlab.gemini.edu:rtsw/ioc/<project name>.git
  
and afterwards any other git operation on those projects without having to enter user credentials.

Using tito to Build and Deploy RPMs
-----------------------------------
In Gemini's test environment :code:`tito` (documentation to be found `here <https://github.com/rpm-software-management/tito>`_) is used to build and deploy RPMs to the `testing RPM repository`_. It can be installed by

::

  sudo dnf install -y tito
  
in the CentOS8 VM.

The typical workflow is to 
  * clone_ a project, 
  * enter its directory and do some changes, 
  * test to build while hopefully all dependencies_ are installed using the typical command set (for *EPICS* projects usually something like :code:`make distclean uninstall all`), 
  * :code:`git commit -a` those changes and 
  * :code:`tito tag` them. 
  * Then those changes could be released as *RPM* to the repository doing :code:`RSYNC_USERNAME=koji tito release gemrtsw-el8-x86_64`
  


  
